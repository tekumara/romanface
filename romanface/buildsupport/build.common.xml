<?xml version="1.0" ?>
<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- name set to project name (of importer if one) for convenience -->
	<property name="name" value="${ant.project.name}" />
	
	<!-- load properties from build.properties file -->
	<property file="build.properties" />
		
	<!-- compiler options -->
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />
	<property name="javac.debug" value="on" />
	<property name="javac.args" value="-Xlint" />

	<!-- locations NB: relative paths are relative to importer -->
	<dirname property="buildsupport.dir" file="${ant.file.common}" />
	<ivy:settings file="${buildsupport.dir}/ivysettings.xml" />
	<property name="src.dir" location="src" />
	<property name="res.dir" value="resource" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="${build.dir}" />
	<property name="ivy.lib.dir" location="${build.dir}/lib" />
	<property name="class.dir" location="${build.dir}/bin" />
	<property name="doc.dir" location="doc" />
	<property name="ivyreport.dir" location="${doc.dir}/dependencies" />

	<!-- artifact names -->
	<property name="binary.jar" value="${name}-${version}.jar" />
	<property name="javadoc.jar" value="${name}-javadoc-${version}.jar" />
	<property name="sources.jar" value="${name}-sources-${version}.jar" />
	<property name="binary.plus.deps.zip" value="${name}-all-plus-deps-${version}.zip" />

	<!-- build class path -->
	<path id="build.classpath">
		<!-- all jars in the lib dir -->
		<fileset dir="${ivy.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="resolve" description="Resolve dependencies using Ivy">
		<!-- do a retrieve to ivy.lib.dir -->
		<ivy:retrieve conf="master" />

		<!-- save report to doc.dir -->
		<ivy:report conf="master" graph="false" todir="${ivyreport.dir}" />
		
	</target>
	
	<target name="post-resolve" depends="resolve" description="Post Ivy resolve" />
	
	<target name="clean-ivycache" description="Clean the Ivy cache">
		<ivy:cleancache />
	</target>

	<target name="init" depends="clean" description="Create compilation dirs">
		<mkdir dir="${class.dir}" />
		<copy includeemptydirs="false" failonerror="false" todir="${class.dir}">
			<fileset dir="." includes="${res.dir}/" />
			<fileset dir="${src.dir}">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>

	</target>

	<target name="clean" description="Remove build dir">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" depends="init,resolve,post-resolve" description="Compile source">
		<javac srcdir="${src.dir}" debug="${javac.debug}" destdir="${class.dir}" includeantruntime="false" source="${source}" target="${target}" classpathref="build.classpath">
			<compilerarg line="${javac.args}" />
		</javac>
	</target>

	<target name="javadoc" description="Generate javadocs">
		<javadoc-with-presets sourcepath="${src.dir}" destdir="${doc.dir}" author="true" version="true" use="true" classpathref="build.classpath" />
	</target>

	<target name="package" depends="compile, javadoc" description="Package JAR files">
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/${binary.jar}" basedir="${class.dir}" />
		<jar destfile="${dist.dir}/${javadoc.jar}" basedir="${doc.dir}" />
		<jar destfile="${dist.dir}/${sources.jar}" basedir="${src.dir}" />
		<zip destfile="${dist.dir}/${binary.plus.deps.zip}" basedir="${dist.dir}">
			<include name="*.jar" />
			<zipfileset dir="${ivy.lib.dir}" prefix="lib" />
		</zip>
	</target>

	<target name="publish" description="Publish JARs to local ivy repository">
		<!-- do a resolve first. this places our ivy.xml in the cache -->
		<ivy:resolve />
		<!-- delete the resolved/delivered ivy.xml file from previous publications
			 in case we have made new changes to ivy.xml since then  
        	 this will be regenerated in the deliver performed by the publish -->
		<delete file="${dist.dir}/ivy-${version}.xml" />
		<ivy:publish artifactspattern="${dist.dir}/[artifact](-[classifier])-${version}.[ext]" status="release" overwrite="true" resolver="local" />
	</target>

	<taskdef name="gcupload" classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="${buildsupport.dir}/ant-googlecode-0.0.2.jar" />
	<target name="gcupload" description="Upload JARs to googlecode">
		<property file="build.credentials.properties" />

		<gcupload username="${gc.username}" password="${gc.password}" projectname="${name}" filename="${dist.dir}/${binary.jar}" targetfilename="${binary.jar}" summary="${name} ${version} binary" labels="Featured" />

		<gcupload username="${gc.username}" password="${gc.password}" projectname="${name}" filename="${dist.dir}/${javadoc.jar}" targetfilename="${javadoc.jar}" summary="${name} ${version} javadoc" labels="Type-Docs" />

		<gcupload username="${gc.username}" password="${gc.password}" projectname="${name}" filename="${dist.dir}/${sources.jar}" targetfilename="${sources.jar}" summary="${name} ${version} sources" labels="Type-Source" />

		<gcupload username="${gc.username}" password="${gc.password}" projectname="${name}" filename="${dist.dir}/${binary.plus.deps.zip}" targetfilename="${binary.plus.deps.zip}" summary="${name} ${version} binary + dependencies" labels="Featured" />
	</target>

</project>
